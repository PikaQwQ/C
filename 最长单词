 #include <stdio.h>

int alphabetic(char c)
{
    if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
    {
        return 1;
    }
    else
    {
        return 0;
    }
}

/* 寻找最长单词 */
int longest(char string[])
{
    int len = 0, i, length = 0, flag = 1, place, point;

    for (i = 0; i <= strlen(string); i++)
    {
        if (alphabetic(string[i]))
        {
            if (flag)
            {
                point = i;
                flag = 0;
            }
            else
            {
                len++;
            }
        }
        else
        {
            flag = 1;
            if (len > length)
            {
                length = len;
                place = point;
                len = 0;
            }
        }
    }
    return place;
}

int main()
{
    int i;
    char line[100];

    printf("输入一行文本：\n");
    gets(line);
    printf("\n最长的单词是：");
    for (i = longest(line); alphabetic(line[i]); i++)
    {
        printf("%c", line[i]);
    }
    printf("\n");

    return 0;
}
/*新版*/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int F(char *p);
int main()
{
    int i,max=0,len;
    char s1[80];
    char *p=s1,*p1;
    printf("输入一行文本：\n");
    gets(s1);
    while(*p!='\0')
    {
        while(*p=='\0'||*p==' ')
        {
            p++;
        }
        len=F(p);
        if(len>max)
        {
            p1=p;
            max=len;
        }
        p=p+len;
    }
    printf("\n最长的单词是：");
    for(;*p1!=' '&&*p1!='\0';p1++)
    {
        if(*p1>'a'&&*p1<'z')
        printf("%c",*p1);
    }
    printf("\n");
    return 0;
}
int F(char *p)
{
    char *p2;
    p2=p;
    while(*p!='\0'&&*p!=' ')
    {
        p++;
    }
    return p-p2;
}

